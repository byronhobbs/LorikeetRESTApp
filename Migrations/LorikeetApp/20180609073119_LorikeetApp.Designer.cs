// <auto-generated />
using LorikeetRESTApp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace LorikeetRESTApp.Migrations.LorikeetApp
{
    [DbContext(typeof(LorikeetAppContext))]
    [Migration("20180609073119_LorikeetApp")]
    partial class LorikeetApp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("LorikeetRESTApp.Database.AppointmentMember", b =>
                {
                    b.Property<int>("MemberActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MemberActivityID")
                        .HasColumnType("int(11)");

                    b.Property<int>("AppointmentsId")
                        .HasColumnName("AppointmentsID")
                        .HasColumnType("int(11)");

                    b.Property<int>("MemberId")
                        .HasColumnName("MemberID")
                        .HasColumnType("int(11)");

                    b.HasKey("MemberActivityId");

                    b.ToTable("AppointmentMember");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Appointments", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UniqueID")
                        .HasColumnType("int(11)");

                    b.Property<sbyte?>("AllDay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CustomField1")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Label")
                        .HasColumnType("int(11)");

                    b.Property<string>("Location")
                        .HasMaxLength(50);

                    b.Property<string>("RecurrenceInfo")
                        .HasMaxLength(20);

                    b.Property<string>("ReminderInfo")
                        .HasMaxLength(20);

                    b.Property<int?>("ResourceId")
                        .HasColumnName("ResourceID")
                        .HasColumnType("int(11)");

                    b.Property<string>("ResourceIds")
                        .HasColumnName("ResourceIDs")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int(11)");

                    b.Property<string>("Subject")
                        .HasMaxLength(50);

                    b.Property<string>("TimeZoneId")
                        .HasMaxLength(20);

                    b.Property<int?>("Type")
                        .HasColumnType("int(11)");

                    b.HasKey("UniqueId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.AppointmentsNumbers", b =>
                {
                    b.Property<int>("AppointmentsNumbers1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AppointmentsNumbers")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("LabelId")
                        .HasColumnName("LabelID")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Number")
                        .HasColumnType("int(11)");

                    b.HasKey("AppointmentsNumbers1");

                    b.ToTable("AppointmentsNumbers");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AttendanceID")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("MemberId")
                        .HasColumnName("MemberID")
                        .HasColumnType("int(11)");

                    b.HasKey("AttendanceId");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.AttendanceNumbers", b =>
                {
                    b.Property<int>("AttendanceNumbersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AttendanceNumbersID")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("Number")
                        .HasColumnType("int(11)");

                    b.HasKey("AttendanceNumbersId");

                    b.ToTable("AttendanceNumbers");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContactID")
                        .HasColumnType("int(11)");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500);

                    b.Property<string>("ContactName")
                        .HasMaxLength(500);

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20);

                    b.Property<string>("ContactType")
                        .HasMaxLength(500);

                    b.Property<int>("MemberId")
                        .HasColumnName("MemberID")
                        .HasColumnType("int(11)");

                    b.HasKey("ContactId");

                    b.HasIndex("MemberId")
                        .HasName("FK_Contact_Member");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.DebitSystem", b =>
                {
                    b.Property<int>("DebitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DebitID")
                        .HasColumnType("int(11)");

                    b.Property<decimal?>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Details")
                        .HasMaxLength(200);

                    b.Property<int>("MemberId")
                        .HasColumnName("MemberID")
                        .HasColumnType("int(11)");

                    b.Property<decimal?>("RunningTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StaffId")
                        .HasColumnName("StaffID")
                        .HasColumnType("int(11)");

                    b.HasKey("DebitId");

                    b.HasIndex("MemberId")
                        .HasName("FK_DebitSystem_Member");

                    b.HasIndex("StaffId")
                        .HasName("FK_DebitSystem_Staff");

                    b.ToTable("DebitSystem");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Diagnosis", b =>
                {
                    b.Property<int>("DiagnosisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DiagnosisID")
                        .HasColumnType("int(11)");

                    b.Property<int>("DiagnosisNameId")
                        .HasColumnName("DiagnosisNameID")
                        .HasColumnType("int(11)");

                    b.Property<int>("MemberId")
                        .HasColumnName("MemberID")
                        .HasColumnType("int(11)");

                    b.HasKey("DiagnosisId");

                    b.HasIndex("MemberId")
                        .HasName("FK_Diagnosis_Member");

                    b.ToTable("Diagnosis");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.DiagnosisName", b =>
                {
                    b.Property<int>("DiagnosisNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DiagnosisNameID")
                        .HasColumnType("int(11)");

                    b.Property<string>("DiagnosisName1")
                        .IsRequired()
                        .HasColumnName("DiagnosisName")
                        .HasMaxLength(255);

                    b.HasKey("DiagnosisNameId");

                    b.ToTable("DiagnosisName");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GuestID")
                        .HasColumnType("int(11)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<byte[]>("Picture")
                        .IsRequired();

                    b.HasKey("GuestId");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Labels", b =>
                {
                    b.Property<int>("LabelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LabelID")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Color")
                        .HasColumnType("int(11)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50);

                    b.Property<string>("MenuCaption")
                        .HasMaxLength(50);

                    b.Property<string>("Shortcut")
                        .HasMaxLength(20);

                    b.HasKey("LabelId");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LogID")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("ErrorCode")
                        .HasColumnType("int(11)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("RefreshCode")
                        .HasColumnType("int(11)");

                    b.Property<int>("StaffId")
                        .HasColumnName("StaffID")
                        .HasColumnType("int(11)");

                    b.HasKey("LogId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Login", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LoginID")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Access")
                        .HasColumnType("int(11)");

                    b.Property<string>("LoginName")
                        .HasMaxLength(50);

                    b.Property<string>("LoginPass")
                        .HasMaxLength(50);

                    b.Property<int?>("Pin")
                        .HasColumnType("int(11)");

                    b.HasKey("LoginId");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Lunch", b =>
                {
                    b.Property<int>("LunchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LunchID")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<sbyte>("Main")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<sbyte>("Paid")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("StaffId")
                        .HasColumnName("StaffID")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("TakeAway")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("LunchId");

                    b.HasIndex("StaffId")
                        .HasName("FK_Lunch_Staff");

                    b.ToTable("Lunch");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Medication", b =>
                {
                    b.Property<int>("MedicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MedicationID")
                        .HasColumnType("int(11)");

                    b.Property<int>("MedicationNameId")
                        .HasColumnName("MedicationNameID")
                        .HasColumnType("int(11)");

                    b.Property<int>("MemberId")
                        .HasColumnName("MemberID")
                        .HasColumnType("int(11)");

                    b.HasKey("MedicationId");

                    b.HasIndex("MemberId")
                        .HasName("FK_Medication_Member");

                    b.ToTable("Medication");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.MedicationName", b =>
                {
                    b.Property<int>("MedicationNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MedicationNameID")
                        .HasColumnType("int(11)");

                    b.Property<string>("MedicationName1")
                        .IsRequired()
                        .HasColumnName("MedicationName")
                        .HasMaxLength(20);

                    b.HasKey("MedicationNameId");

                    b.ToTable("MedicationName");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MemberID")
                        .HasColumnType("int(11)");

                    b.Property<sbyte?>("Aboriginal")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte?>("Agency")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte?>("Archived")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte?>("BirthdayCard")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Country")
                        .HasMaxLength(50);

                    b.Property<string>("CountryOfOrigin")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("DateAltered")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateJoined")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(20);

                    b.Property<string>("PostCode")
                        .HasMaxLength(7);

                    b.Property<sbyte?>("ReceiveByMail")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte?>("ReceiveNewsletter")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte?>("Sex")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("State")
                        .HasMaxLength(50);

                    b.Property<string>("StreetAddress")
                        .HasMaxLength(200);

                    b.Property<sbyte?>("Studying")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Suburb")
                        .HasMaxLength(50);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("TelephoneNumber")
                        .HasMaxLength(20);

                    b.Property<sbyte?>("Volunteering")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte?>("Working")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("MemberId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MenuID")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("DateMade")
                        .HasColumnType("datetime");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("MenuId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Note", b =>
                {
                    b.Property<int>("NotesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NotesID")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<sbyte?>("Editable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MemberId")
                        .HasColumnName("MemberID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Notes")
                        .HasMaxLength(255);

                    b.Property<int?>("StaffId")
                        .HasColumnName("StaffID")
                        .HasColumnType("int(11)");

                    b.HasKey("NotesId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Picture", b =>
                {
                    b.Property<int>("PictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PictureID")
                        .HasColumnType("int(11)");

                    b.Property<byte[]>("MemberFacialRecognition");

                    b.Property<int>("MemberId")
                        .HasColumnName("MemberID")
                        .HasColumnType("int(11)");

                    b.Property<byte[]>("MemberPicture")
                        .IsRequired();

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("PictureId");

                    b.HasIndex("MemberId")
                        .HasName("FK_Picture_Member");

                    b.ToTable("Picture");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Resources", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UniqueID")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Color")
                        .HasColumnType("int(11)");

                    b.Property<string>("CustomField1")
                        .HasMaxLength(20);

                    b.Property<byte[]>("Image");

                    b.Property<int>("ResourceId")
                        .HasColumnName("ResourceID")
                        .HasColumnType("int(11)");

                    b.Property<string>("ResourceName")
                        .HasMaxLength(50);

                    b.HasKey("UniqueId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.SignIn", b =>
                {
                    b.Property<int>("SigninId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SigninID")
                        .HasColumnType("int(11)");

                    b.Property<int?>("GuestId")
                        .HasColumnName("GuestID")
                        .HasColumnType("int(11)");

                    b.Property<int?>("MemberId")
                        .HasColumnName("MemberID")
                        .HasColumnType("int(11)");

                    b.Property<string>("MethodOfSigningIn")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Timein")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Timeout")
                        .HasColumnType("datetime");

                    b.HasKey("SigninId");

                    b.HasIndex("GuestId")
                        .HasName("FK_SignIn_Guest");

                    b.HasIndex("MemberId")
                        .HasName("FK_SignIn_Member");

                    b.ToTable("SignIn");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StaffID")
                        .HasColumnType("int(11)");

                    b.Property<int>("LoginId")
                        .HasColumnName("LoginID")
                        .HasColumnType("int(11)");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("StaffId");

                    b.HasIndex("LoginId")
                        .HasName("FK_Staff_Login");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Contact", b =>
                {
                    b.HasOne("LorikeetRESTApp.Database.Member", "Member")
                        .WithMany("Contact")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Contact_Member");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.DebitSystem", b =>
                {
                    b.HasOne("LorikeetRESTApp.Database.Member", "Member")
                        .WithMany("DebitSystem")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_DebitSystem_Member");

                    b.HasOne("LorikeetRESTApp.Database.Staff", "Staff")
                        .WithMany("DebitSystem")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_DebitSystem_Staff");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Diagnosis", b =>
                {
                    b.HasOne("LorikeetRESTApp.Database.Member", "Member")
                        .WithMany("Diagnosis")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Diagnosis_Member");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Lunch", b =>
                {
                    b.HasOne("LorikeetRESTApp.Database.Staff", "Staff")
                        .WithMany("Lunch")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_Lunch_Staff");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Medication", b =>
                {
                    b.HasOne("LorikeetRESTApp.Database.Member", "Member")
                        .WithMany("Medication")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Medication_Member");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Picture", b =>
                {
                    b.HasOne("LorikeetRESTApp.Database.Member", "Member")
                        .WithMany("Picture")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_Picture_Member");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.SignIn", b =>
                {
                    b.HasOne("LorikeetRESTApp.Database.Guest", "Guest")
                        .WithMany("SignIn")
                        .HasForeignKey("GuestId")
                        .HasConstraintName("FK_SignIn_Guest");

                    b.HasOne("LorikeetRESTApp.Database.Member", "Member")
                        .WithMany("SignIn")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK_SignIn_Member");
                });

            modelBuilder.Entity("LorikeetRESTApp.Database.Staff", b =>
                {
                    b.HasOne("LorikeetRESTApp.Database.Login", "Login")
                        .WithMany("Staff")
                        .HasForeignKey("LoginId")
                        .HasConstraintName("FK_Staff_Login");
                });
#pragma warning restore 612, 618
        }
    }
}
